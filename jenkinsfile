pipeline {
    agent { label 'JDK-17' }
    options {
        timeout(time: 30, unit: 'MINUTES')
    }
    triggers {
        pollSCM('* * * * *')
    }
    tools {
        jdk 'JDK-17'
    }
    parameters {
        choice (name: 'GOAL', choices: ['package', 'clean package', 'install', 'clean install'], description: 'This is maven goal')
    }
    stages {
        stage('vcs') {
            steps {
                git url: 'https://github.com/dilip309/spring-petclinic.git',
                    branch: 'develop'
            }
        }
        stage('build and package') {
            steps {
                sh script: "mvn ${params.GOAL}"
            }
        }
        stage('reporting') {
            steps {
                archiveArtifacts artifacts: '**/target/spring-petclinic-*.jar'
                junit testResults: '**/surefire-reports/TEST-*.xml'
            }
        }
    }
    post {
        success{
            mail subject: "${JOB_NAME}: has completed with success", 
            body: "your project is effective \n Buils url ${BUILD_URL}",
            to: 'dilip309@gmail.com'
        }
        failure{
            mail subject: "${JOB_NAME}: has completed with failed", 
            body: "your project is defective \n Buils url ${BUILD_URL}",
            to: 'dilip309@gmail.com'
    }

    }
}